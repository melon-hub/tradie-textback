#!/bin/bash

# Git Auto-Push with Tagging - Optimized Version
# Usage: git-autopush [commit message]

set -e  # Exit on error

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Check if we're in a git repo
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}❌ Not a git repository${NC}"
    exit 1
fi

# Get current branch
BRANCH=$(git branch --show-current)

# Check for changes
if [ -z "$(git status --porcelain)" ]; then
    echo -e "${GREEN}✅ No changes to commit${NC}"
    exit 0
fi

# Get commit message
COMMIT_MSG="${1:-Update $(date +%Y-%m-%d) - Various improvements}"

# Get version info
git fetch --tags --quiet 2>/dev/null || true
LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
VERSION=${LATEST_TAG#v}
MAJOR=$(echo $VERSION | cut -d. -f1)
MINOR=$(echo $VERSION | cut -d. -f2)
PATCH=$(echo $VERSION | cut -d. -f3)
NEW_TAG="v${MAJOR}.${MINOR}.$((PATCH + 1))"

# Quick summary before starting
echo -e "${GREEN}🚀 Git Push - $BRANCH → $NEW_TAG${NC}"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Stage, commit, tag, and push in one go
git add -A && \
git commit -m "$COMMIT_MSG

🤖 Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>" --quiet && \
git tag -a $NEW_TAG -m "Release $NEW_TAG - $COMMIT_MSG" && \
git push origin $BRANCH $NEW_TAG --quiet

# Final summary
echo -e "${GREEN}✅ Success!${NC} $NEW_TAG pushed to $BRANCH"
echo -e "📝 $COMMIT_MSG"
echo -e "🔗 $(git remote get-url origin | sed 's/.*github.com[:/]\(.*\)\.git/\1/')"